from typing import Optional


# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class LinkedList:
    def __init__(self) -> None:
        self.head = None


    def add_front(self, val):
        new_node = ListNode(val)
        if self.head == None:
            self.head = new_node
        else:
            new_node.next = self.head
            self.head = new_node
        

def mergeTwoLists(list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
    cur = dummy = ListNode()
    while list1 and list2: 
        breakpoint()              
        if list1.val < list2.val:
            cur.next = list1
            list1, cur = list1.next, list1
        else:
            cur.next = list2
            list2, cur = list2.next, list2
            
    if list1 or list2:
        cur.next = list1 if list1 else list2
        
    return dummy.next


list1 = LinkedList()
list1.add_front(3)
list1.add_front(2)
list1.add_front(1)

list2 = LinkedList()
list2.add_front(6)
list2.add_front(4)
list2.add_front(0)

merge_head = mergeTwoLists(list1.head, list2.head)